/*
 * Copyright (C) 2021 rifqi
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package alingeo.matriks.ui;

import javax.swing.JFileChooser;
import java.io.File;
import java.util.Locale;
import java.util.Arrays;

import alingeo.matriks.Matrix;
import alingeo.matriks.Util;
import alingeo.matriks.io.Parser;
import alingeo.matriks.solver.SPLSolver;
import alingeo.matriks.solver.SPLSolver.SolutionResult;
import alingeo.matriks.solver.DeterminantSolver;
import alingeo.matriks.solver.InversSolver;
import alingeo.matriks.problem.Regression;
import alingeo.matriks.problem.Interpolation;

/**
 *
 * @author rifqi
 */
public class Main extends javax.swing.JFrame {

    private Util.Formatting formatOutput = Util.Formatting.DEFAULT;

    /**
     * Creates new form NewJFrame
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Menu = new javax.swing.ButtonGroup();
        FileOpener = new javax.swing.JFileChooser();
        FileSaver = new javax.swing.JFileChooser();
        SidePanel = new javax.swing.JPanel();
        SideHeader = new javax.swing.JPanel();
        HeaderLabel = new javax.swing.JLabel();
        SideMenu = new javax.swing.JPanel();
        FormatLabel = new javax.swing.JLabel();
        FormatSelect = new javax.swing.JComboBox<>();
        SPLLabel = new javax.swing.JLabel();
        SPLGauss = new javax.swing.JRadioButton();
        SPLGaussJordan = new javax.swing.JRadioButton();
        SPLMatriksBalikan = new javax.swing.JRadioButton();
        SPLCrammer = new javax.swing.JRadioButton();
        DeterminanLabel = new javax.swing.JLabel();
        DeterminanKofaktor = new javax.swing.JRadioButton();
        DeterminanOBE = new javax.swing.JRadioButton();
        InversLabel = new javax.swing.JLabel();
        InversGauss = new javax.swing.JRadioButton();
        InversAdjoin = new javax.swing.JRadioButton();
        ProblemSolverLabel = new javax.swing.JLabel();
        Interpolasi = new javax.swing.JRadioButton();
        Regresi = new javax.swing.JRadioButton();
        ExitButton = new javax.swing.JButton();
        LayeredPanel = new javax.swing.JLayeredPane();
        SPLGaussPanel = new javax.swing.JPanel();
        SPLGaussTitle = new javax.swing.JLabel();
        SPLGaussInst1 = new javax.swing.JLabel();
        SPLGaussInst2 = new javax.swing.JLabel();
        SPLGaussInst3 = new javax.swing.JLabel();
        SPLGaussInst4 = new javax.swing.JLabel();
        SPLGaussInst5 = new javax.swing.JLabel();
        SPLGaussCalculate = new javax.swing.JButton();
        SPLGaussOpenFile = new javax.swing.JButton();
        SPLGaussFilepath = new javax.swing.JTextField();
        SPLGaussSave = new javax.swing.JButton();
        SPLGaussPrompt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SPLGaussInput = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        SPLGaussIntermediate = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        SPLGaussOutput = new javax.swing.JTextPane();
        SPLGaussInst49 = new javax.swing.JLabel();
        SPLGaussJordanPanel = new javax.swing.JPanel();
        SPLGaussTitle4 = new javax.swing.JLabel();
        SPLGaussInst25 = new javax.swing.JLabel();
        SPLGaussInst26 = new javax.swing.JLabel();
        SPLGaussInst27 = new javax.swing.JLabel();
        SPLGaussInst28 = new javax.swing.JLabel();
        SPLGaussInst29 = new javax.swing.JLabel();
        SPLGaussInst30 = new javax.swing.JLabel();
        SPLGaussJordanCalculate = new javax.swing.JButton();
        SPLGaussJordanOpenFile = new javax.swing.JButton();
        SPLGaussJordanFilepath = new javax.swing.JTextField();
        SPLGaussJordanSave = new javax.swing.JButton();
        SPLGaussJordanPrompt = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        SPLGaussJordanInput = new javax.swing.JTextPane();
        jScrollPane15 = new javax.swing.JScrollPane();
        SPLGaussJordanIntermediate = new javax.swing.JTextPane();
        jScrollPane16 = new javax.swing.JScrollPane();
        SPLGaussJordanOutput = new javax.swing.JTextPane();
        SPLMatriksBalikanPanel = new javax.swing.JPanel();
        SPLGaussTitle5 = new javax.swing.JLabel();
        SPLGaussInst31 = new javax.swing.JLabel();
        SPLGaussInst32 = new javax.swing.JLabel();
        SPLGaussInst33 = new javax.swing.JLabel();
        SPLGaussInst34 = new javax.swing.JLabel();
        SPLGaussInst35 = new javax.swing.JLabel();
        SPLGaussInst36 = new javax.swing.JLabel();
        SPLMatriksBalikanCalculate = new javax.swing.JButton();
        SPLMatriksBalikanOpenFile = new javax.swing.JButton();
        SPLMatriksBalikanFilepath = new javax.swing.JTextField();
        SPLMatriksBalikanSave = new javax.swing.JButton();
        SPLMatriksBalikanPrompt = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        SPLMatriksBalikanInput = new javax.swing.JTextPane();
        jScrollPane18 = new javax.swing.JScrollPane();
        SPLMatriksBalikanIntermediate = new javax.swing.JTextPane();
        jScrollPane19 = new javax.swing.JScrollPane();
        SPLMatriksBalikanOutput = new javax.swing.JTextPane();
        SPLCrammerPanel = new javax.swing.JPanel();
        SPLGaussTitle6 = new javax.swing.JLabel();
        SPLGaussInst37 = new javax.swing.JLabel();
        SPLGaussInst38 = new javax.swing.JLabel();
        SPLGaussInst39 = new javax.swing.JLabel();
        SPLGaussInst41 = new javax.swing.JLabel();
        SPLGaussInst42 = new javax.swing.JLabel();
        SPLCrammerCalculate = new javax.swing.JButton();
        SPLCrammerOpenFile = new javax.swing.JButton();
        SPLCrammerFilepath = new javax.swing.JTextField();
        SPLCrammerSave = new javax.swing.JButton();
        SPLCrammerPrompt = new javax.swing.JLabel();
        jScrollPane20 = new javax.swing.JScrollPane();
        SPLCrammerInput = new javax.swing.JTextPane();
        jScrollPane22 = new javax.swing.JScrollPane();
        SPLCrammerOutput = new javax.swing.JTextPane();
        DeterminanKofaktorPanel = new javax.swing.JPanel();
        DeterminanKofaktorTitle = new javax.swing.JLabel();
        SPLGaussInst7 = new javax.swing.JLabel();
        SPLGaussInst8 = new javax.swing.JLabel();
        SPLGaussInst9 = new javax.swing.JLabel();
        SPLGaussInst11 = new javax.swing.JLabel();
        DeterminanKofaktorCalculate = new javax.swing.JButton();
        DeterminanKofaktorOpenFile = new javax.swing.JButton();
        DeterminanKofaktorFilepath = new javax.swing.JTextField();
        DeterminanKofaktorSave = new javax.swing.JButton();
        DeterminanKofaktorPrompt = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        DeterminanKofaktorInput = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        DeterminanKofaktorOutput = new javax.swing.JTextPane();
        DeterminanOBEPanel = new javax.swing.JPanel();
        SPLGaussTitle1 = new javax.swing.JLabel();
        SPLGaussInst10 = new javax.swing.JLabel();
        SPLGaussInst12 = new javax.swing.JLabel();
        SPLGaussInst13 = new javax.swing.JLabel();
        SPLGaussInst14 = new javax.swing.JLabel();
        SPLGaussInst15 = new javax.swing.JLabel();
        DeterminanOBECalculate = new javax.swing.JButton();
        DeterminanOBEOpenFile = new javax.swing.JButton();
        DeterminanOBEFilepath = new javax.swing.JTextField();
        DeterminanOBESave = new javax.swing.JButton();
        DeterminanOBEPrompt = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        DeterminanOBEInput = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        DeterminanOBEIntermediate = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        DeterminanOBEOutput = new javax.swing.JTextPane();
        InversGaussPanel = new javax.swing.JPanel();
        SPLGaussTitle2 = new javax.swing.JLabel();
        SPLGaussInst16 = new javax.swing.JLabel();
        SPLGaussInst17 = new javax.swing.JLabel();
        SPLGaussInst18 = new javax.swing.JLabel();
        SPLGaussInst20 = new javax.swing.JLabel();
        InversGaussCalculate = new javax.swing.JButton();
        InversGaussOpenFile = new javax.swing.JButton();
        InversGaussFilepath = new javax.swing.JTextField();
        InversGaussSave = new javax.swing.JButton();
        InversGaussPrompt = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        InversGaussInput = new javax.swing.JTextPane();
        jScrollPane11 = new javax.swing.JScrollPane();
        InversGaussOutput = new javax.swing.JTextPane();
        InversAdjoinPanel = new javax.swing.JPanel();
        SPLGaussTitle3 = new javax.swing.JLabel();
        SPLGaussInst19 = new javax.swing.JLabel();
        SPLGaussInst21 = new javax.swing.JLabel();
        SPLGaussInst22 = new javax.swing.JLabel();
        SPLGaussInst23 = new javax.swing.JLabel();
        SPLGaussInst24 = new javax.swing.JLabel();
        InversAdjoinCalculate = new javax.swing.JButton();
        InversAdjoinOpenFile = new javax.swing.JButton();
        InversAdjoinFilepath = new javax.swing.JTextField();
        InversAdjoinSave = new javax.swing.JButton();
        InversAdjoinPrompt = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        InversAdjoinInput = new javax.swing.JTextPane();
        jScrollPane12 = new javax.swing.JScrollPane();
        InversAdjoinIntermediate = new javax.swing.JTextPane();
        jScrollPane13 = new javax.swing.JScrollPane();
        InversAdjoinOutput = new javax.swing.JTextPane();
        RegresiPanel = new javax.swing.JPanel();
        SPLGaussTitle7 = new javax.swing.JLabel();
        SPLGaussInst43 = new javax.swing.JLabel();
        SPLGaussInst44 = new javax.swing.JLabel();
        SPLGaussInst45 = new javax.swing.JLabel();
        SPLGaussInst46 = new javax.swing.JLabel();
        SPLGaussInst47 = new javax.swing.JLabel();
        RegresiCalculate = new javax.swing.JButton();
        RegresiOpenFile = new javax.swing.JButton();
        RegresiFilepath = new javax.swing.JTextField();
        RegresiSave = new javax.swing.JButton();
        RegresiPrompt = new javax.swing.JLabel();
        jScrollPane23 = new javax.swing.JScrollPane();
        RegresiInput = new javax.swing.JTextPane();
        jScrollPane24 = new javax.swing.JScrollPane();
        RegresiIntermediate = new javax.swing.JTextPane();
        jScrollPane25 = new javax.swing.JScrollPane();
        RegresiOutput = new javax.swing.JTextPane();
        InterpolasiPanel = new javax.swing.JPanel();
        SPLGaussTitle8 = new javax.swing.JLabel();
        SPLGaussInst48 = new javax.swing.JLabel();
        SPLGaussInst50 = new javax.swing.JLabel();
        SPLGaussInst51 = new javax.swing.JLabel();
        SPLGaussInst52 = new javax.swing.JLabel();
        SPLGaussInst53 = new javax.swing.JLabel();
        InterpolasiCalculate = new javax.swing.JButton();
        InterpolasiOpenFile = new javax.swing.JButton();
        InterpolasiFilepath = new javax.swing.JTextField();
        InterpolasiSave = new javax.swing.JButton();
        InterpolasiPrompt = new javax.swing.JLabel();
        jScrollPane26 = new javax.swing.JScrollPane();
        InterpolasiInput = new javax.swing.JTextPane();
        jScrollPane27 = new javax.swing.JScrollPane();
        InterpolasiIntermediate = new javax.swing.JTextPane();
        jScrollPane28 = new javax.swing.JScrollPane();
        InterpolasiOutput = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 600, 580));
        setMaximumSize(new java.awt.Dimension(650, 580));
        setPreferredSize(new java.awt.Dimension(600, 580));
        setResizable(false);
        setSize(new java.awt.Dimension(650, 580));

        SidePanel.setBackground(new java.awt.Color(204, 204, 204));
        SidePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), null));

        SideHeader.setBackground(new java.awt.Color(153, 153, 153));

        HeaderLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        HeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeaderLabel.setText("Menu");
        HeaderLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout SideHeaderLayout = new javax.swing.GroupLayout(SideHeader);
        SideHeader.setLayout(SideHeaderLayout);
        SideHeaderLayout.setHorizontalGroup(
            SideHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
        );
        SideHeaderLayout.setVerticalGroup(
            SideHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
        );

        SideMenu.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));

        FormatLabel.setText("Format:");
        SideMenu.add(FormatLabel);

        FormatSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Short", "Long", "ShortPad" }));
        FormatSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormatSelectActionPerformed(evt);
            }
        });
        SideMenu.add(FormatSelect);

        SPLLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SPLLabel.setText("        SPL        ");
        SideMenu.add(SPLLabel);

        Menu.add(SPLGauss);
        SPLGauss.setSelected(true);
        SPLGauss.setText("Metode Gauss   ");
        SPLGauss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLGaussActionPerformed(evt);
            }
        });
        SideMenu.add(SPLGauss);

        Menu.add(SPLGaussJordan);
        SPLGaussJordan.setText("Metode Gauss Jordan   ");
        SPLGaussJordan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLGaussJordanActionPerformed(evt);
            }
        });
        SideMenu.add(SPLGaussJordan);

        Menu.add(SPLMatriksBalikan);
        SPLMatriksBalikan.setText("Metode Matriks Balikan   ");
        SPLMatriksBalikan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLMatriksBalikanActionPerformed(evt);
            }
        });
        SideMenu.add(SPLMatriksBalikan);

        Menu.add(SPLCrammer);
        SPLCrammer.setText("Metode Crammer   ");
        SPLCrammer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLCrammerActionPerformed(evt);
            }
        });
        SideMenu.add(SPLCrammer);

        DeterminanLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        DeterminanLabel.setText("   Determinan    ");
        SideMenu.add(DeterminanLabel);

        Menu.add(DeterminanKofaktor);
        DeterminanKofaktor.setText("Ekspansi Kofaktor   ");
        DeterminanKofaktor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeterminanKofaktorActionPerformed(evt);
            }
        });
        SideMenu.add(DeterminanKofaktor);

        Menu.add(DeterminanOBE);
        DeterminanOBE.setText("Metode OBE   ");
        DeterminanOBE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeterminanOBEActionPerformed(evt);
            }
        });
        SideMenu.add(DeterminanOBE);

        InversLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        InversLabel.setText("   Invers   ");
        SideMenu.add(InversLabel);

        Menu.add(InversGauss);
        InversGauss.setText("Metode Gauss-Jordan   ");
        InversGauss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InversGaussActionPerformed(evt);
            }
        });
        SideMenu.add(InversGauss);

        Menu.add(InversAdjoin);
        InversAdjoin.setText("Metode Adjoint   ");
        InversAdjoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InversAdjoinActionPerformed(evt);
            }
        });
        SideMenu.add(InversAdjoin);

        ProblemSolverLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ProblemSolverLabel.setText("Problem Solver");
        SideMenu.add(ProblemSolverLabel);

        Menu.add(Interpolasi);
        Interpolasi.setText("Interpolasi   ");
        Interpolasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InterpolasiActionPerformed(evt);
            }
        });
        SideMenu.add(Interpolasi);

        Menu.add(Regresi);
        Regresi.setText("Regresi    ");
        Regresi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresiActionPerformed(evt);
            }
        });
        SideMenu.add(Regresi);

        ExitButton.setText("   EXIT   ");
        ExitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });
        SideMenu.add(ExitButton);

        javax.swing.GroupLayout SidePanelLayout = new javax.swing.GroupLayout(SidePanel);
        SidePanel.setLayout(SidePanelLayout);
        SidePanelLayout.setHorizontalGroup(
            SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidePanelLayout.createSequentialGroup()
                .addGroup(SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(SideMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(SideHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        SidePanelLayout.setVerticalGroup(
            SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidePanelLayout.createSequentialGroup()
                .addComponent(SideHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SideMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        LayeredPanel.setPreferredSize(new java.awt.Dimension(480, 500));
        LayeredPanel.setLayout(new java.awt.CardLayout());

        SPLGaussPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SPLGaussTitle.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        SPLGaussTitle.setText("SPL Metode Gauss");
        SPLGaussPanel.add(SPLGaussTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        SPLGaussInst1.setText("Input Matriks Augmented");
        SPLGaussPanel.add(SPLGaussInst1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 55, 390, -1));

        SPLGaussInst2.setText("Pisahkan elemen dengan spasi");
        SPLGaussPanel.add(SPLGaussInst2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 75, 364, -1));

        SPLGaussInst3.setText("Pisahkan baris dengan newline (enter)");
        SPLGaussPanel.add(SPLGaussInst3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 93, 380, -1));

        SPLGaussInst4.setText("Matriks eselon:");
        SPLGaussPanel.add(SPLGaussInst4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 242, 160, -1));

        SPLGaussInst5.setText("Hasil:");
        SPLGaussPanel.add(SPLGaussInst5, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 242, 160, -1));

        SPLGaussCalculate.setText("Calculate");
        SPLGaussCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLGaussCalculateActionPerformed(evt);
            }
        });
        SPLGaussPanel.add(SPLGaussCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 149, 84, -1));

        SPLGaussOpenFile.setText("Open");
        SPLGaussOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLGaussOpenFileActionPerformed(evt);
            }
        });
        SPLGaussPanel.add(SPLGaussOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 118, -1, 20));

        SPLGaussFilepath.setEditable(false);
        SPLGaussFilepath.setText("Open A File..");
        SPLGaussPanel.add(SPLGaussFilepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 118, 99, -1));

        SPLGaussSave.setText("Save");
        SPLGaussSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLGaussSaveActionPerformed(evt);
            }
        });
        SPLGaussPanel.add(SPLGaussSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 183, 84, -1));

        SPLGaussPrompt.setText("Prompt");
        SPLGaussPanel.add(SPLGaussPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 217, 190, -1));

        jScrollPane1.setViewportView(SPLGaussInput);

        SPLGaussPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 118, 160, 113));

        SPLGaussIntermediate.setEditable(false);
        jScrollPane2.setViewportView(SPLGaussIntermediate);

        SPLGaussPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 160, 113));

        SPLGaussOutput.setEditable(false);
        jScrollPane3.setViewportView(SPLGaussOutput);

        SPLGaussPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 280, 164, 113));

        SPLGaussInst49.setText("Tiap X dipisah newline");
        SPLGaussPanel.add(SPLGaussInst49, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 260, 180, -1));

        LayeredPanel.add(SPLGaussPanel, "card2");

        SPLGaussJordanPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SPLGaussTitle4.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        SPLGaussTitle4.setText("SPL Metode Gauss Jordan");
        SPLGaussJordanPanel.add(SPLGaussTitle4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        SPLGaussInst25.setText("Input Matriks Augmented:");
        SPLGaussJordanPanel.add(SPLGaussInst25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 55, 280, -1));

        SPLGaussInst26.setText("Pisahkan elemen dengan spasi");
        SPLGaussJordanPanel.add(SPLGaussInst26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 75, 364, -1));

        SPLGaussInst27.setText("Pisahkan baris dengan newline (enter)");
        SPLGaussJordanPanel.add(SPLGaussInst27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 93, 330, -1));

        SPLGaussInst28.setText("Matriks eselon:");
        SPLGaussJordanPanel.add(SPLGaussInst28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 242, 160, -1));

        SPLGaussInst29.setText("Hasil:");
        SPLGaussJordanPanel.add(SPLGaussInst29, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 242, 140, -1));

        SPLGaussInst30.setText("Tiap X dipisah newline");
        SPLGaussJordanPanel.add(SPLGaussInst30, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 262, 160, -1));

        SPLGaussJordanCalculate.setText("Calculate");
        SPLGaussJordanCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLGaussJordanCalculateActionPerformed(evt);
            }
        });
        SPLGaussJordanPanel.add(SPLGaussJordanCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 149, 84, -1));

        SPLGaussJordanOpenFile.setText("Open");
        SPLGaussJordanOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLGaussJordanOpenFileActionPerformed(evt);
            }
        });
        SPLGaussJordanPanel.add(SPLGaussJordanOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 118, -1, 20));

        SPLGaussJordanFilepath.setEditable(false);
        SPLGaussJordanFilepath.setText("Open A File..");
        SPLGaussJordanPanel.add(SPLGaussJordanFilepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 118, 99, -1));

        SPLGaussJordanSave.setText("Save");
        SPLGaussJordanSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLGaussJordanSaveActionPerformed(evt);
            }
        });
        SPLGaussJordanPanel.add(SPLGaussJordanSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 183, 84, -1));

        SPLGaussJordanPrompt.setText("Prompt");
        SPLGaussJordanPanel.add(SPLGaussJordanPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 217, 150, -1));

        jScrollPane14.setViewportView(SPLGaussJordanInput);

        SPLGaussJordanPanel.add(jScrollPane14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 118, 160, 113));

        SPLGaussJordanIntermediate.setEditable(false);
        jScrollPane15.setViewportView(SPLGaussJordanIntermediate);

        SPLGaussJordanPanel.add(jScrollPane15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 160, 113));

        SPLGaussJordanOutput.setEditable(false);
        jScrollPane16.setViewportView(SPLGaussJordanOutput);

        SPLGaussJordanPanel.add(jScrollPane16, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 280, 164, 113));

        LayeredPanel.add(SPLGaussJordanPanel, "card2");

        SPLMatriksBalikanPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SPLGaussTitle5.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        SPLGaussTitle5.setText("SPL Metode Matriks Balikan");
        SPLMatriksBalikanPanel.add(SPLGaussTitle5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        SPLGaussInst31.setText("Input Matriks Augmented :");
        SPLMatriksBalikanPanel.add(SPLGaussInst31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 55, 350, -1));

        SPLGaussInst32.setText("Pisahkan elemen dengan spasi");
        SPLMatriksBalikanPanel.add(SPLGaussInst32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 75, 364, -1));

        SPLGaussInst33.setText("Pisahkan baris dengan newline (enter)");
        SPLMatriksBalikanPanel.add(SPLGaussInst33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 93, 310, -1));

        SPLGaussInst34.setText("Matriks Invers:");
        SPLMatriksBalikanPanel.add(SPLGaussInst34, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 242, 160, -1));

        SPLGaussInst35.setText("Hasil:");
        SPLMatriksBalikanPanel.add(SPLGaussInst35, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 242, 160, -1));

        SPLGaussInst36.setText("Tiap X dipisah newline");
        SPLMatriksBalikanPanel.add(SPLGaussInst36, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 262, 160, -1));

        SPLMatriksBalikanCalculate.setText("Calculate");
        SPLMatriksBalikanCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLMatriksBalikanCalculateActionPerformed(evt);
            }
        });
        SPLMatriksBalikanPanel.add(SPLMatriksBalikanCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 149, 84, -1));

        SPLMatriksBalikanOpenFile.setText("Open");
        SPLMatriksBalikanOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLMatriksBalikanOpenFileActionPerformed(evt);
            }
        });
        SPLMatriksBalikanPanel.add(SPLMatriksBalikanOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 118, -1, 20));

        SPLMatriksBalikanFilepath.setEditable(false);
        SPLMatriksBalikanFilepath.setText("Open A File..");
        SPLMatriksBalikanPanel.add(SPLMatriksBalikanFilepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 118, 99, -1));

        SPLMatriksBalikanSave.setText("Save");
        SPLMatriksBalikanSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLMatriksBalikanSaveActionPerformed(evt);
            }
        });
        SPLMatriksBalikanPanel.add(SPLMatriksBalikanSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 183, 84, -1));

        SPLMatriksBalikanPrompt.setText("Prompt");
        SPLMatriksBalikanPanel.add(SPLMatriksBalikanPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 217, 150, -1));

        jScrollPane17.setViewportView(SPLMatriksBalikanInput);

        SPLMatriksBalikanPanel.add(jScrollPane17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 118, 160, 113));

        SPLMatriksBalikanIntermediate.setEditable(false);
        jScrollPane18.setViewportView(SPLMatriksBalikanIntermediate);

        SPLMatriksBalikanPanel.add(jScrollPane18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 160, 113));

        SPLMatriksBalikanOutput.setEditable(false);
        jScrollPane19.setViewportView(SPLMatriksBalikanOutput);

        SPLMatriksBalikanPanel.add(jScrollPane19, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 280, 164, 113));

        LayeredPanel.add(SPLMatriksBalikanPanel, "card2");

        SPLCrammerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SPLGaussTitle6.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        SPLGaussTitle6.setText("SPL Metode Cramer");
        SPLCrammerPanel.add(SPLGaussTitle6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        SPLGaussInst37.setText("Input Matriks Augmented :");
        SPLCrammerPanel.add(SPLGaussInst37, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 55, 340, -1));

        SPLGaussInst38.setText("Pisahkan elemen dengan spasi");
        SPLCrammerPanel.add(SPLGaussInst38, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 75, 364, -1));

        SPLGaussInst39.setText("Pisahkan baris dengan newline (enter)");
        SPLCrammerPanel.add(SPLGaussInst39, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 93, 340, -1));

        SPLGaussInst41.setText("Hasil:");
        SPLCrammerPanel.add(SPLGaussInst41, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 242, 160, -1));

        SPLGaussInst42.setText("Tiap X dipisah newline");
        SPLCrammerPanel.add(SPLGaussInst42, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 262, 160, -1));

        SPLCrammerCalculate.setText("Calculate");
        SPLCrammerCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLCrammerCalculateActionPerformed(evt);
            }
        });
        SPLCrammerPanel.add(SPLCrammerCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 149, 84, -1));

        SPLCrammerOpenFile.setText("Open");
        SPLCrammerOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLCrammerOpenFileActionPerformed(evt);
            }
        });
        SPLCrammerPanel.add(SPLCrammerOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 118, -1, 20));

        SPLCrammerFilepath.setEditable(false);
        SPLCrammerFilepath.setText("Open A File..");
        SPLCrammerPanel.add(SPLCrammerFilepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 118, 99, -1));

        SPLCrammerSave.setText("Save");
        SPLCrammerSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPLCrammerSaveActionPerformed(evt);
            }
        });
        SPLCrammerPanel.add(SPLCrammerSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 183, 84, -1));

        SPLCrammerPrompt.setText("Prompt");
        SPLCrammerPanel.add(SPLCrammerPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 217, 160, -1));

        jScrollPane20.setViewportView(SPLCrammerInput);

        SPLCrammerPanel.add(jScrollPane20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 118, 160, 113));

        SPLCrammerOutput.setEditable(false);
        jScrollPane22.setViewportView(SPLCrammerOutput);

        SPLCrammerPanel.add(jScrollPane22, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 280, 164, 113));

        LayeredPanel.add(SPLCrammerPanel, "card2");

        DeterminanKofaktorPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DeterminanKofaktorTitle.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        DeterminanKofaktorTitle.setText("Determinan Metode Ekspansi Kofaktor");
        DeterminanKofaktorPanel.add(DeterminanKofaktorTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        SPLGaussInst7.setText("Input Matriks :");
        DeterminanKofaktorPanel.add(SPLGaussInst7, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 55, 310, -1));

        SPLGaussInst8.setText("Pisahkan elemen dengan spasi");
        DeterminanKofaktorPanel.add(SPLGaussInst8, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 75, 320, -1));

        SPLGaussInst9.setText("Pisahkan baris dengan newline (enter)");
        DeterminanKofaktorPanel.add(SPLGaussInst9, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 93, 330, -1));

        SPLGaussInst11.setText("Hasil:");
        DeterminanKofaktorPanel.add(SPLGaussInst11, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 242, 140, -1));

        DeterminanKofaktorCalculate.setText("Calculate");
        DeterminanKofaktorCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeterminanKofaktorCalculateActionPerformed(evt);
            }
        });
        DeterminanKofaktorPanel.add(DeterminanKofaktorCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 149, 84, -1));

        DeterminanKofaktorOpenFile.setText("Open");
        DeterminanKofaktorOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeterminanKofaktorOpenFileActionPerformed(evt);
            }
        });
        DeterminanKofaktorPanel.add(DeterminanKofaktorOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 118, -1, 20));

        DeterminanKofaktorFilepath.setEditable(false);
        DeterminanKofaktorFilepath.setText("Open A File..");
        DeterminanKofaktorPanel.add(DeterminanKofaktorFilepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 118, 99, -1));

        DeterminanKofaktorSave.setText("Save");
        DeterminanKofaktorSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeterminanKofaktorSaveActionPerformed(evt);
            }
        });
        DeterminanKofaktorPanel.add(DeterminanKofaktorSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 183, 84, -1));

        DeterminanKofaktorPrompt.setText("Prompt");
        DeterminanKofaktorPanel.add(DeterminanKofaktorPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 217, 140, -1));

        jScrollPane4.setViewportView(DeterminanKofaktorInput);

        DeterminanKofaktorPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 118, 160, 113));

        DeterminanKofaktorOutput.setEditable(false);
        jScrollPane6.setViewportView(DeterminanKofaktorOutput);

        DeterminanKofaktorPanel.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 164, 113));

        LayeredPanel.add(DeterminanKofaktorPanel, "card2");

        DeterminanOBEPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SPLGaussTitle1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        SPLGaussTitle1.setText("Determinan Metode OBE");
        DeterminanOBEPanel.add(SPLGaussTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        SPLGaussInst10.setText("Input Matriks :");
        DeterminanOBEPanel.add(SPLGaussInst10, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 55, 300, -1));

        SPLGaussInst12.setText("Pisahkan elemen dengan spasi");
        DeterminanOBEPanel.add(SPLGaussInst12, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 75, 330, -1));

        SPLGaussInst13.setText("Pisahkan baris dengan newline (enter)");
        DeterminanOBEPanel.add(SPLGaussInst13, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 93, 330, -1));

        SPLGaussInst14.setText("Matriks eselon :");
        DeterminanOBEPanel.add(SPLGaussInst14, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 242, 160, -1));

        SPLGaussInst15.setText("Hasil:");
        DeterminanOBEPanel.add(SPLGaussInst15, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 242, 160, -1));

        DeterminanOBECalculate.setText("Calculate");
        DeterminanOBECalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeterminanOBECalculateActionPerformed(evt);
            }
        });
        DeterminanOBEPanel.add(DeterminanOBECalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 149, 84, -1));

        DeterminanOBEOpenFile.setText("Open");
        DeterminanOBEOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeterminanOBEOpenFileActionPerformed(evt);
            }
        });
        DeterminanOBEPanel.add(DeterminanOBEOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 118, -1, 20));

        DeterminanOBEFilepath.setEditable(false);
        DeterminanOBEFilepath.setText("Open A File..");
        DeterminanOBEPanel.add(DeterminanOBEFilepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 118, 99, -1));

        DeterminanOBESave.setText("Save");
        DeterminanOBESave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeterminanOBESaveActionPerformed(evt);
            }
        });
        DeterminanOBEPanel.add(DeterminanOBESave, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 183, 84, -1));

        DeterminanOBEPrompt.setText("Prompt");
        DeterminanOBEPanel.add(DeterminanOBEPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 217, 160, -1));

        jScrollPane5.setViewportView(DeterminanOBEInput);

        DeterminanOBEPanel.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 118, 160, 113));

        DeterminanOBEIntermediate.setEditable(false);
        jScrollPane7.setViewportView(DeterminanOBEIntermediate);

        DeterminanOBEPanel.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 280, 160, 113));

        DeterminanOBEOutput.setEditable(false);
        jScrollPane8.setViewportView(DeterminanOBEOutput);

        DeterminanOBEPanel.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 164, 113));

        LayeredPanel.add(DeterminanOBEPanel, "card2");

        InversGaussPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SPLGaussTitle2.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        SPLGaussTitle2.setText("Invers Metode Gauss Jordan");
        InversGaussPanel.add(SPLGaussTitle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        SPLGaussInst16.setText("Input Matriks :");
        InversGaussPanel.add(SPLGaussInst16, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 55, 320, -1));

        SPLGaussInst17.setText("Pisahkan elemen dengan spasi");
        InversGaussPanel.add(SPLGaussInst17, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 75, 320, -1));

        SPLGaussInst18.setText("Pisahkan baris dengan newline (enter)");
        InversGaussPanel.add(SPLGaussInst18, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 93, 340, -1));

        SPLGaussInst20.setText("Hasil:");
        InversGaussPanel.add(SPLGaussInst20, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 242, 140, -1));

        InversGaussCalculate.setText("Calculate");
        InversGaussCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InversGaussCalculateActionPerformed(evt);
            }
        });
        InversGaussPanel.add(InversGaussCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 149, 84, -1));

        InversGaussOpenFile.setText("Open");
        InversGaussOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InversGaussOpenFileActionPerformed(evt);
            }
        });
        InversGaussPanel.add(InversGaussOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 118, -1, 20));

        InversGaussFilepath.setEditable(false);
        InversGaussFilepath.setText("Open A File..");
        InversGaussPanel.add(InversGaussFilepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 118, 99, -1));

        InversGaussSave.setText("Save");
        InversGaussPanel.add(InversGaussSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 183, 84, -1));

        InversGaussPrompt.setText("Prompt");
        InversGaussPanel.add(InversGaussPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 217, 140, -1));

        jScrollPane9.setViewportView(InversGaussInput);

        InversGaussPanel.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 118, 160, 113));

        InversGaussOutput.setEditable(false);
        jScrollPane11.setViewportView(InversGaussOutput);

        InversGaussPanel.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 164, 113));

        LayeredPanel.add(InversGaussPanel, "card2");

        InversAdjoinPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SPLGaussTitle3.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        SPLGaussTitle3.setText("Invers Metode Adjoin");
        InversAdjoinPanel.add(SPLGaussTitle3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        SPLGaussInst19.setText("Input Matriks :");
        InversAdjoinPanel.add(SPLGaussInst19, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 55, 310, -1));

        SPLGaussInst21.setText("Pisahkan elemen dengan spasi");
        InversAdjoinPanel.add(SPLGaussInst21, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 75, 300, -1));

        SPLGaussInst22.setText("Pisahkan baris dengan newline (enter)");
        InversAdjoinPanel.add(SPLGaussInst22, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 93, 320, -1));

        SPLGaussInst23.setText("Matriks Kofaktor:");
        InversAdjoinPanel.add(SPLGaussInst23, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 242, 177, -1));

        SPLGaussInst24.setText("Hasil:");
        InversAdjoinPanel.add(SPLGaussInst24, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 242, 123, -1));

        InversAdjoinCalculate.setText("Calculate");
        InversAdjoinCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InversAdjoinCalculateActionPerformed(evt);
            }
        });
        InversAdjoinPanel.add(InversAdjoinCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 149, 84, -1));

        InversAdjoinOpenFile.setText("Open");
        InversAdjoinOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InversAdjoinOpenFileActionPerformed(evt);
            }
        });
        InversAdjoinPanel.add(InversAdjoinOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 118, -1, 20));

        InversAdjoinFilepath.setEditable(false);
        InversAdjoinFilepath.setText("Open A File..");
        InversAdjoinPanel.add(InversAdjoinFilepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 118, 99, -1));

        InversAdjoinSave.setText("Save");
        InversAdjoinSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InversAdjoinSaveActionPerformed(evt);
            }
        });
        InversAdjoinPanel.add(InversAdjoinSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 183, 84, -1));

        InversAdjoinPrompt.setText("Prompt");
        InversAdjoinPanel.add(InversAdjoinPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 217, 164, -1));

        jScrollPane10.setViewportView(InversAdjoinInput);

        InversAdjoinPanel.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 118, 160, 113));

        InversAdjoinIntermediate.setEditable(false);
        jScrollPane12.setViewportView(InversAdjoinIntermediate);

        InversAdjoinPanel.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 280, 160, 113));

        InversAdjoinOutput.setEditable(false);
        jScrollPane13.setViewportView(InversAdjoinOutput);

        InversAdjoinPanel.add(jScrollPane13, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 164, 113));

        LayeredPanel.add(InversAdjoinPanel, "card2");

        RegresiPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SPLGaussTitle7.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        SPLGaussTitle7.setText("Regresi Linear Berganda");
        RegresiPanel.add(SPLGaussTitle7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        SPLGaussInst43.setText("Input N, Matriks, dan Xk dengan dipisahkan dengan newline");
        RegresiPanel.add(SPLGaussInst43, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 55, 350, -1));

        SPLGaussInst44.setText("Pisahkan antar elemen dengan spasi");
        RegresiPanel.add(SPLGaussInst44, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 75, 364, -1));

        SPLGaussInst45.setText("Pastikan N sesuai dengan ukuran Matriks dan Xk");
        RegresiPanel.add(SPLGaussInst45, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 93, 340, -1));

        SPLGaussInst46.setText("Persamaan Regresi");
        RegresiPanel.add(SPLGaussInst46, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 242, 151, -1));

        SPLGaussInst47.setText("Hasil:");
        RegresiPanel.add(SPLGaussInst47, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 242, 160, -1));

        RegresiCalculate.setText("Calculate");
        RegresiCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresiCalculateActionPerformed(evt);
            }
        });
        RegresiPanel.add(RegresiCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 149, 84, -1));

        RegresiOpenFile.setText("Open");
        RegresiOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresiOpenFileActionPerformed(evt);
            }
        });
        RegresiPanel.add(RegresiOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 118, -1, 20));

        RegresiFilepath.setEditable(false);
        RegresiFilepath.setText("Open A File..");
        RegresiPanel.add(RegresiFilepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 118, 99, -1));

        RegresiSave.setText("Save");
        RegresiSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresiSaveActionPerformed(evt);
            }
        });
        RegresiPanel.add(RegresiSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 183, 84, -1));

        RegresiPrompt.setText("Prompt");
        RegresiPanel.add(RegresiPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 217, 160, -1));

        jScrollPane23.setMaximumSize(new java.awt.Dimension(23, 23));
        jScrollPane23.setViewportView(RegresiInput);

        RegresiPanel.add(jScrollPane23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 118, 160, 113));

        RegresiIntermediate.setEditable(false);
        jScrollPane24.setViewportView(RegresiIntermediate);

        RegresiPanel.add(jScrollPane24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 160, 113));

        RegresiOutput.setEditable(false);
        jScrollPane25.setViewportView(RegresiOutput);

        RegresiPanel.add(jScrollPane25, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 280, 164, 113));

        LayeredPanel.add(RegresiPanel, "card2");

        InterpolasiPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SPLGaussTitle8.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        SPLGaussTitle8.setText("Interpolasi Polinom");
        InterpolasiPanel.add(SPLGaussTitle8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        SPLGaussInst48.setText("Input N, Points, dan X dengan dipisahkan dengan newline");
        InterpolasiPanel.add(SPLGaussInst48, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 55, 350, -1));

        SPLGaussInst50.setText("Pisahkan antar elemen dengan spasi");
        InterpolasiPanel.add(SPLGaussInst50, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 75, 364, -1));

        SPLGaussInst51.setText("Pastikan N sesuai dengan jumlah point");
        InterpolasiPanel.add(SPLGaussInst51, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 93, 350, -1));

        SPLGaussInst52.setText("Persamaan Polinom");
        InterpolasiPanel.add(SPLGaussInst52, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 242, 151, -1));

        SPLGaussInst53.setText("Hasil:");
        InterpolasiPanel.add(SPLGaussInst53, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 242, 160, -1));

        InterpolasiCalculate.setText("Calculate");
        InterpolasiCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InterpolasiCalculateActionPerformed(evt);
            }
        });
        InterpolasiPanel.add(InterpolasiCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 149, 84, -1));

        InterpolasiOpenFile.setText("Open");
        InterpolasiOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InterpolasiOpenFileActionPerformed(evt);
            }
        });
        InterpolasiPanel.add(InterpolasiOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 118, -1, 20));

        InterpolasiFilepath.setEditable(false);
        InterpolasiFilepath.setText("Open A File..");
        InterpolasiPanel.add(InterpolasiFilepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 118, 99, -1));

        InterpolasiSave.setText("Save");
        InterpolasiSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InterpolasiSaveActionPerformed(evt);
            }
        });
        InterpolasiPanel.add(InterpolasiSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 183, 84, -1));

        InterpolasiPrompt.setText("Prompt");
        InterpolasiPanel.add(InterpolasiPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 217, 160, -1));

        jScrollPane26.setMaximumSize(new java.awt.Dimension(23, 23));
        jScrollPane26.setViewportView(InterpolasiInput);

        InterpolasiPanel.add(jScrollPane26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 118, 160, 113));

        InterpolasiIntermediate.setEditable(false);
        jScrollPane27.setViewportView(InterpolasiIntermediate);

        InterpolasiPanel.add(jScrollPane27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 160, 113));

        InterpolasiOutput.setEditable(false);
        jScrollPane28.setViewportView(InterpolasiOutput);

        InterpolasiPanel.add(jScrollPane28, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 280, 164, 113));

        LayeredPanel.add(InterpolasiPanel, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(LayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SPLGaussActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLGaussActionPerformed
        if (SPLGauss.isSelected()) {
            LayeredPanel.removeAll();
            LayeredPanel.add(SPLGaussPanel);
            LayeredPanel.repaint();
            LayeredPanel.revalidate();
        }
    }//GEN-LAST:event_SPLGaussActionPerformed

    private void SPLGaussJordanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLGaussJordanActionPerformed
        if (SPLGaussJordan.isSelected()) {
            LayeredPanel.removeAll();
            LayeredPanel.add(SPLGaussJordanPanel);
            LayeredPanel.repaint();
            LayeredPanel.revalidate();
        }
    }//GEN-LAST:event_SPLGaussJordanActionPerformed

    private void SPLGaussOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLGaussOpenFileActionPerformed
        int result = FileOpener.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = FileOpener.getSelectedFile();
            SPLGaussFilepath.setText(selectedFile.getAbsolutePath());
            SPLGaussInput.setText(Parser.fileToMatrix(selectedFile).toString(formatOutput));
        }
    }//GEN-LAST:event_SPLGaussOpenFileActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void DeterminanKofaktorOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeterminanKofaktorOpenFileActionPerformed
        int result = FileOpener.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = FileOpener.getSelectedFile();
            DeterminanKofaktorFilepath.setText(selectedFile.getAbsolutePath());
            DeterminanKofaktorInput.setText(Parser.fileToMatrix(selectedFile).toString(formatOutput));
        }
    }//GEN-LAST:event_DeterminanKofaktorOpenFileActionPerformed

    private void DeterminanKofaktorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeterminanKofaktorActionPerformed
        if (DeterminanKofaktor.isSelected()) {
            LayeredPanel.removeAll();
            LayeredPanel.add(DeterminanKofaktorPanel);
            LayeredPanel.repaint();
            LayeredPanel.revalidate();
        }
    }//GEN-LAST:event_DeterminanKofaktorActionPerformed

    private void SPLGaussCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLGaussCalculateActionPerformed
        try {
            Matrix M = Parser.stringToMatrix(SPLGaussInput.getText());
            M.toEchelonForm(false);
            SPLGaussIntermediate.setText(M.toString(formatOutput));
            SolutionResult res = SPLSolver.backwardSubstitution(M);
            SPLGaussOutput.setText(res.toString(formatOutput));
        } catch (Exception e) {
            SPLGaussPrompt.setText("Input tidak valid");
        }
    }//GEN-LAST:event_SPLGaussCalculateActionPerformed

    private void DeterminanKofaktorCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeterminanKofaktorCalculateActionPerformed
        try {
            Matrix M = Parser.stringToMatrix(DeterminanKofaktorInput.getText());
            if (M.isSquare()) {
                double output = DeterminantSolver.CofactorExpansion(M);
                DeterminanKofaktorOutput.setText(Util.format(output, formatOutput));
            } else {
                DeterminanKofaktorPrompt.setText("Matriks tidak persegi");
            }
        } catch (Exception e) {
            DeterminanKofaktorPrompt.setText("Input tidak valid");
        }
    }//GEN-LAST:event_DeterminanKofaktorCalculateActionPerformed

    private void DeterminanOBECalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeterminanOBECalculateActionPerformed
        try {
            Matrix M = Parser.stringToMatrix(DeterminanOBEInput.getText());
            if (M.isSquare()) {
                Matrix res = new Matrix(M.getNRow(), M.getNCol());
                double output = DeterminantSolver.ERO(M, res);
                DeterminanOBEOutput.setText(Util.format(output, formatOutput));
                DeterminanOBEIntermediate.setText(res.toString(formatOutput));
            } else {
                DeterminanOBEPrompt.setText("Matriks tidak persegi");
            }
        } catch (Exception e) {
            DeterminanOBEPrompt.setText("Input tidak valid");
        }
    }//GEN-LAST:event_DeterminanOBECalculateActionPerformed

    private void DeterminanOBEOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeterminanOBEOpenFileActionPerformed
        int result = FileOpener.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = FileOpener.getSelectedFile();
            DeterminanOBEFilepath.setText(selectedFile.getAbsolutePath());
            DeterminanOBEInput.setText(Parser.fileToMatrix(selectedFile).toString(formatOutput));
        }
    }//GEN-LAST:event_DeterminanOBEOpenFileActionPerformed

    private void DeterminanOBEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeterminanOBEActionPerformed
        if (DeterminanOBE.isSelected()) {
            LayeredPanel.removeAll();
            LayeredPanel.add(DeterminanOBEPanel);
            LayeredPanel.repaint();
            LayeredPanel.revalidate();
        }
    }//GEN-LAST:event_DeterminanOBEActionPerformed

    private void InversGaussCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InversGaussCalculateActionPerformed
        try {
            Matrix M = Parser.stringToMatrix(InversGaussInput.getText());
            if (M.isSquare()) {
                Matrix output = InversSolver.GaussJordanMethod(M);
                if (output != null) {
                    InversGaussOutput.setText(output.toString(formatOutput));
                } else {
                    InversGaussOutput.setText("Invers tidak ditemukan.");
                }
            } else {
                InversGaussPrompt.setText("Matriks tidak persegi");
            }
        } catch (Exception e) {
            InversGaussPrompt.setText("Input tidak valid");
        }
    }//GEN-LAST:event_InversGaussCalculateActionPerformed

    private void InversGaussOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InversGaussOpenFileActionPerformed
        int result = FileOpener.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = FileOpener.getSelectedFile();
            InversGaussFilepath.setText(selectedFile.getAbsolutePath());
            InversGaussInput.setText(Parser.fileToMatrix(selectedFile).toString(formatOutput));
        }
    }//GEN-LAST:event_InversGaussOpenFileActionPerformed

    private void InversGaussActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InversGaussActionPerformed
        if (InversGauss.isSelected()) {
            LayeredPanel.removeAll();
            LayeredPanel.add(InversGaussPanel);
            LayeredPanel.repaint();
            LayeredPanel.revalidate();
        }
    }//GEN-LAST:event_InversGaussActionPerformed

    private void InversAdjoinCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InversAdjoinCalculateActionPerformed
        try {
            Matrix M = Parser.stringToMatrix(InversAdjoinInput.getText());
            if (M.isSquare()) {
                Matrix cof = new Matrix(M.getNRow(), M.getNCol());
                Matrix output = InversSolver.AdjointMethod(M, cof);
                if (output != null) {
                    InversAdjoinOutput.setText(output.toString(formatOutput));
                    InversAdjoinIntermediate.setText(cof.toString(formatOutput));
                } else {
                    InversAdjoinOutput.setText("Invers tidak ditemukan.");
                }
            } else {
                InversAdjoinPrompt.setText("Matriks tidak persegi");
            }
        } catch (Exception e) {
            InversAdjoinPrompt.setText("Input tidak valid");
        }
    }//GEN-LAST:event_InversAdjoinCalculateActionPerformed

    private void InversAdjoinOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InversAdjoinOpenFileActionPerformed
        int result = FileOpener.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = FileOpener.getSelectedFile();
            InversAdjoinFilepath.setText(selectedFile.getAbsolutePath());
            InversAdjoinInput.setText(Parser.fileToMatrix(selectedFile).toString(formatOutput));
        }
    }//GEN-LAST:event_InversAdjoinOpenFileActionPerformed

    private void SPLGaussSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLGaussSaveActionPerformed
        if (SPLGaussOutput.getText().equals("")) {
            SPLGaussPrompt.setText("Output kosong");
        } else {
            int result = FileSaver.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                Parser.stringToFile(SPLGaussOutput.getText(), FileSaver.getSelectedFile().toString() + ".txt");
                SPLGaussPrompt.setText("File berhasil di-save");
            }
        }
    }//GEN-LAST:event_SPLGaussSaveActionPerformed

    private void SPLGaussJordanCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLGaussJordanCalculateActionPerformed
        try {
            Matrix M = Parser.stringToMatrix(SPLGaussJordanInput.getText());
            M.toEchelonForm(true);
            SPLGaussJordanIntermediate.setText(M.toString(formatOutput));
            SolutionResult res = SPLSolver.backwardSubstitution(M);
            SPLGaussJordanOutput.setText(res.toString(formatOutput));
        } catch (Exception e) {
            SPLGaussJordanPrompt.setText("Input tidak valid");
        }
    }//GEN-LAST:event_SPLGaussJordanCalculateActionPerformed

    private void SPLGaussJordanOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLGaussJordanOpenFileActionPerformed
        int result = FileOpener.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = FileOpener.getSelectedFile();
            SPLGaussJordanFilepath.setText(selectedFile.getAbsolutePath());
            SPLGaussJordanInput.setText(Parser.fileToMatrix(selectedFile).toString(formatOutput));
        }
    }//GEN-LAST:event_SPLGaussJordanOpenFileActionPerformed

    private void SPLGaussJordanSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLGaussJordanSaveActionPerformed
        if (SPLGaussJordanOutput.getText().equals("")) {
            SPLGaussJordanPrompt.setText("Output kosong");
        } else {
            int result = FileSaver.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                Parser.stringToFile(SPLGaussJordanOutput.getText(), FileSaver.getSelectedFile().toString() + ".txt");
                SPLGaussJordanPrompt.setText("File berhasil di-save");
            }
        }
    }//GEN-LAST:event_SPLGaussJordanSaveActionPerformed

    private void DeterminanKofaktorSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeterminanKofaktorSaveActionPerformed
        if (DeterminanKofaktorOutput.getText().equals("")) {
            DeterminanKofaktorPrompt.setText("Output kosong");
        } else {
            int result = FileSaver.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                Parser.stringToFile(DeterminanKofaktorOutput.getText(), FileSaver.getSelectedFile().toString() + ".txt");
                DeterminanKofaktorPrompt.setText("File berhasil di-save");
            }
        }
    }//GEN-LAST:event_DeterminanKofaktorSaveActionPerformed

    private void DeterminanOBESaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeterminanOBESaveActionPerformed
        if (DeterminanOBEOutput.getText().equals("")) {
            DeterminanOBEPrompt.setText("Output kosong");
        } else {
            int result = FileSaver.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                Parser.stringToFile(DeterminanOBEOutput.getText(), FileSaver.getSelectedFile().toString() + ".txt");
                DeterminanOBEPrompt.setText("File berhasil di-save");
            }
        }
    }//GEN-LAST:event_DeterminanOBESaveActionPerformed

    private void InversAdjoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InversAdjoinActionPerformed
        if (InversAdjoin.isSelected()) {
            LayeredPanel.removeAll();
            LayeredPanel.add(InversAdjoinPanel);
            LayeredPanel.repaint();
            LayeredPanel.revalidate();
        }
    }//GEN-LAST:event_InversAdjoinActionPerformed

    private void InversAdjoinSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InversAdjoinSaveActionPerformed
        if (InversAdjoinOutput.getText().equals("")) {
            InversAdjoinPrompt.setText("Output kosong");
        } else {
            int result = FileSaver.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                Parser.stringToFile(InversAdjoinOutput.getText(), FileSaver.getSelectedFile().toString() + ".txt");
                InversAdjoinPrompt.setText("File berhasil di-save");
            }
        }
    }//GEN-LAST:event_InversAdjoinSaveActionPerformed

    private void SPLMatriksBalikanCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLMatriksBalikanCalculateActionPerformed
        try {
            Matrix M = Parser.stringToMatrix(SPLMatriksBalikanInput.getText());
            SolutionResult res = SPLSolver.inverseMethod(M);
            Matrix intermediate = res.getIntermediate();
            if (intermediate == null) {
                SPLMatriksBalikanOutput.setText("Invers matriks tidak ada");
            } else {
                SPLMatriksBalikanIntermediate.setText(intermediate.toString(formatOutput));
                SPLMatriksBalikanOutput.setText(res.toString(formatOutput));
            }

        } catch (Exception e) {
            SPLMatriksBalikanPrompt.setText("Input tidak valid");
            System.out.println(e);
        }
    }//GEN-LAST:event_SPLMatriksBalikanCalculateActionPerformed

    private void SPLMatriksBalikanOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLMatriksBalikanOpenFileActionPerformed
        int result = FileOpener.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = FileOpener.getSelectedFile();
            SPLMatriksBalikanFilepath.setText(selectedFile.getAbsolutePath());
            SPLMatriksBalikanInput.setText(Parser.fileToMatrix(selectedFile).toString(formatOutput));
        }
    }//GEN-LAST:event_SPLMatriksBalikanOpenFileActionPerformed

    private void SPLMatriksBalikanSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLMatriksBalikanSaveActionPerformed
        if (SPLMatriksBalikanOutput.getText().equals("")) {
            SPLMatriksBalikanPrompt.setText("Output kosong");
        } else {
            int result = FileSaver.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                Parser.stringToFile(SPLMatriksBalikanOutput.getText(), FileSaver.getSelectedFile().toString() + ".txt");
                SPLMatriksBalikanPrompt.setText("File berhasil di-save");
            }
        }
    }//GEN-LAST:event_SPLMatriksBalikanSaveActionPerformed

    private void SPLMatriksBalikanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLMatriksBalikanActionPerformed
        if (SPLMatriksBalikan.isSelected()) {
            LayeredPanel.removeAll();
            LayeredPanel.add(SPLMatriksBalikanPanel);
            LayeredPanel.repaint();
            LayeredPanel.revalidate();
        }
    }//GEN-LAST:event_SPLMatriksBalikanActionPerformed

    private void SPLCrammerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLCrammerActionPerformed
        if (SPLCrammer.isSelected()) {
            LayeredPanel.removeAll();
            LayeredPanel.add(SPLCrammerPanel);
            LayeredPanel.repaint();
            LayeredPanel.revalidate();
        }
    }//GEN-LAST:event_SPLCrammerActionPerformed

    private void SPLCrammerCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLCrammerCalculateActionPerformed
        try {
            Matrix M = Parser.stringToMatrix(SPLCrammerInput.getText());
            SolutionResult res = SPLSolver.crammerMethod(M);
            SPLCrammerOutput.setText(res.toString(formatOutput));
        } catch (Exception e) {
            SPLCrammerPrompt.setText("Input tidak valid");
        }
    }//GEN-LAST:event_SPLCrammerCalculateActionPerformed

    private void SPLCrammerOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLCrammerOpenFileActionPerformed
        int result = FileOpener.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = FileOpener.getSelectedFile();
            SPLCrammerFilepath.setText(selectedFile.getAbsolutePath());
            SPLCrammerInput.setText(Parser.fileToMatrix(selectedFile).toString(formatOutput));
        }
    }//GEN-LAST:event_SPLCrammerOpenFileActionPerformed

    private void SPLCrammerSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPLCrammerSaveActionPerformed
        if (SPLCrammerOutput.getText().equals("")) {
            SPLCrammerPrompt.setText("Output kosong");
        } else {
            int result = FileSaver.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                Parser.stringToFile(SPLCrammerOutput.getText(), FileSaver.getSelectedFile().toString() + ".txt");
                SPLCrammerPrompt.setText("File berhasil di-save");
            }
        }
    }//GEN-LAST:event_SPLCrammerSaveActionPerformed

    private void RegresiCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresiCalculateActionPerformed
        String[] inplines = RegresiInput.getText().split("\n");
        try {
            int N = Integer.valueOf(inplines[0]
                    .replace("\n", "")
                    .replace("\r", "")
            );
            double[] Xk = Parser.stringToDoubleArray(inplines[inplines.length - 1]);
            Matrix M = Parser.stringToMatrix(
                    String.join(
                            "\n",
                            Arrays.copyOfRange(
                                    inplines,
                                    1,
                                    inplines.length - 1
                            )
                    )
            );
            if (N != Xk.length || N != M.getNCol() - 1) {
                throw new Exception("Input tidak valid");
            }
            Regression model = new Regression();
            model.fit(M);
            RegresiIntermediate.setText(Parser.coefRegressionToString(
                    model.getCoef(),
                    model.getIntercept(),
                    this.formatOutput
            ));
            RegresiOutput.setText(Util.format(model.predict(Xk), formatOutput));

        } catch (Exception e) {
            System.out.println(e);
            RegresiPrompt.setText("Input tidak valid");
        }

    }//GEN-LAST:event_RegresiCalculateActionPerformed

    private void RegresiOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresiOpenFileActionPerformed
        int result = FileOpener.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = FileOpener.getSelectedFile();
            RegresiFilepath.setText(selectedFile.getAbsolutePath());
            RegresiInput.setText(Parser.fileToMatrix(selectedFile).toString(formatOutput));
        }
    }//GEN-LAST:event_RegresiOpenFileActionPerformed

    private void RegresiSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresiSaveActionPerformed
        if (RegresiOutput.getText().equals("")) {
            RegresiPrompt.setText("Output kosong");
        } else {
            int result = FileSaver.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                Parser.stringToFile(RegresiOutput.getText(), FileSaver.getSelectedFile().toString() + ".txt");
                RegresiPrompt.setText("File berhasil di-save");
            }
        }
    }//GEN-LAST:event_RegresiSaveActionPerformed

    private void RegresiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresiActionPerformed
        if (Regresi.isSelected()) {
            LayeredPanel.removeAll();
            LayeredPanel.add(RegresiPanel);
            LayeredPanel.repaint();
            LayeredPanel.revalidate();
        }
    }//GEN-LAST:event_RegresiActionPerformed

    private void FormatSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormatSelectActionPerformed
        if (FormatSelect.getSelectedItem().equals("Default")) {
            this.formatOutput = Util.Formatting.DEFAULT;
        } else if (FormatSelect.getSelectedItem().equals("Short")) {
            this.formatOutput = Util.Formatting.SHORT;
        } else if (FormatSelect.getSelectedItem().equals("Long")) {
            this.formatOutput = Util.Formatting.LONG;
        } else if (FormatSelect.getSelectedItem().equals("ShortPad")) {
            this.formatOutput = Util.Formatting.PADDED_SHORT;
        }
    }//GEN-LAST:event_FormatSelectActionPerformed

    private void InterpolasiCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InterpolasiCalculateActionPerformed
        String[] inplines = InterpolasiInput.getText().split("\n");
        try {
            int N = Integer.parseInt(inplines[0]
                    .replace("\n", "")
                    .replace("\r", "")
            );
            Matrix M = Parser.stringToMatrix(
                    String.join(
                            "\n",
                            Arrays.copyOfRange(
                                    inplines,
                                    1,
                                    inplines.length - 1
                            )
                    )
            );
            double X = Double.parseDouble(inplines[inplines.length - 1].replace("\r\n", ""));
            Interpolation model = new Interpolation(M);
            double res = model.evaluate(X);
            InterpolasiIntermediate.setText(model.toString(formatOutput));
            InterpolasiOutput.setText(Util.format(res, formatOutput));
            if (M.getNRow() != N) {
                throw new Exception("Input tidak valid");
            }
        } catch (Exception e) {
            InterpolasiPrompt.setText("Input tidak valid");
        }

    }//GEN-LAST:event_InterpolasiCalculateActionPerformed

    private void InterpolasiOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InterpolasiOpenFileActionPerformed
        int result = FileOpener.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = FileOpener.getSelectedFile();
            InterpolasiFilepath.setText(selectedFile.getAbsolutePath());
            InterpolasiInput.setText(Parser.fileToMatrix(selectedFile).toString(formatOutput));
        }
    }//GEN-LAST:event_InterpolasiOpenFileActionPerformed

    private void InterpolasiSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InterpolasiSaveActionPerformed
        if (InterpolasiOutput.getText().equals("")) {
            InterpolasiPrompt.setText("Output kosong");
        } else {
            int result = FileSaver.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                Parser.stringToFile(InterpolasiOutput.getText(), FileSaver.getSelectedFile().toString() + ".txt");
                InterpolasiPrompt.setText("File berhasil di-save");
            }
        }
    }//GEN-LAST:event_InterpolasiSaveActionPerformed

    private void InterpolasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InterpolasiActionPerformed
        if (Interpolasi.isSelected()) {
            LayeredPanel.removeAll();
            LayeredPanel.add(InterpolasiPanel);
            LayeredPanel.repaint();
            LayeredPanel.revalidate();
        }
    }//GEN-LAST:event_InterpolasiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton DeterminanKofaktor;
    private javax.swing.JButton DeterminanKofaktorCalculate;
    private javax.swing.JTextField DeterminanKofaktorFilepath;
    private javax.swing.JTextPane DeterminanKofaktorInput;
    private javax.swing.JButton DeterminanKofaktorOpenFile;
    private javax.swing.JTextPane DeterminanKofaktorOutput;
    private javax.swing.JPanel DeterminanKofaktorPanel;
    private javax.swing.JLabel DeterminanKofaktorPrompt;
    private javax.swing.JButton DeterminanKofaktorSave;
    private javax.swing.JLabel DeterminanKofaktorTitle;
    private javax.swing.JLabel DeterminanLabel;
    private javax.swing.JRadioButton DeterminanOBE;
    private javax.swing.JButton DeterminanOBECalculate;
    private javax.swing.JTextField DeterminanOBEFilepath;
    private javax.swing.JTextPane DeterminanOBEInput;
    private javax.swing.JTextPane DeterminanOBEIntermediate;
    private javax.swing.JButton DeterminanOBEOpenFile;
    private javax.swing.JTextPane DeterminanOBEOutput;
    private javax.swing.JPanel DeterminanOBEPanel;
    private javax.swing.JLabel DeterminanOBEPrompt;
    private javax.swing.JButton DeterminanOBESave;
    private javax.swing.JButton ExitButton;
    private javax.swing.JFileChooser FileOpener;
    private javax.swing.JFileChooser FileSaver;
    private javax.swing.JLabel FormatLabel;
    private javax.swing.JComboBox<String> FormatSelect;
    private javax.swing.JLabel HeaderLabel;
    private javax.swing.JRadioButton Interpolasi;
    private javax.swing.JButton InterpolasiCalculate;
    private javax.swing.JTextField InterpolasiFilepath;
    private javax.swing.JTextPane InterpolasiInput;
    private javax.swing.JTextPane InterpolasiIntermediate;
    private javax.swing.JButton InterpolasiOpenFile;
    private javax.swing.JTextPane InterpolasiOutput;
    private javax.swing.JPanel InterpolasiPanel;
    private javax.swing.JLabel InterpolasiPrompt;
    private javax.swing.JButton InterpolasiSave;
    private javax.swing.JRadioButton InversAdjoin;
    private javax.swing.JButton InversAdjoinCalculate;
    private javax.swing.JTextField InversAdjoinFilepath;
    private javax.swing.JTextPane InversAdjoinInput;
    private javax.swing.JTextPane InversAdjoinIntermediate;
    private javax.swing.JButton InversAdjoinOpenFile;
    private javax.swing.JTextPane InversAdjoinOutput;
    private javax.swing.JPanel InversAdjoinPanel;
    private javax.swing.JLabel InversAdjoinPrompt;
    private javax.swing.JButton InversAdjoinSave;
    private javax.swing.JRadioButton InversGauss;
    private javax.swing.JButton InversGaussCalculate;
    private javax.swing.JTextField InversGaussFilepath;
    private javax.swing.JTextPane InversGaussInput;
    private javax.swing.JButton InversGaussOpenFile;
    private javax.swing.JTextPane InversGaussOutput;
    private javax.swing.JPanel InversGaussPanel;
    private javax.swing.JLabel InversGaussPrompt;
    private javax.swing.JButton InversGaussSave;
    private javax.swing.JLabel InversLabel;
    private javax.swing.JLayeredPane LayeredPanel;
    private javax.swing.ButtonGroup Menu;
    private javax.swing.JLabel ProblemSolverLabel;
    private javax.swing.JRadioButton Regresi;
    private javax.swing.JButton RegresiCalculate;
    private javax.swing.JTextField RegresiFilepath;
    private javax.swing.JTextPane RegresiInput;
    private javax.swing.JTextPane RegresiIntermediate;
    private javax.swing.JButton RegresiOpenFile;
    private javax.swing.JTextPane RegresiOutput;
    private javax.swing.JPanel RegresiPanel;
    private javax.swing.JLabel RegresiPrompt;
    private javax.swing.JButton RegresiSave;
    private javax.swing.JRadioButton SPLCrammer;
    private javax.swing.JButton SPLCrammerCalculate;
    private javax.swing.JTextField SPLCrammerFilepath;
    private javax.swing.JTextPane SPLCrammerInput;
    private javax.swing.JButton SPLCrammerOpenFile;
    private javax.swing.JTextPane SPLCrammerOutput;
    private javax.swing.JPanel SPLCrammerPanel;
    private javax.swing.JLabel SPLCrammerPrompt;
    private javax.swing.JButton SPLCrammerSave;
    private javax.swing.JRadioButton SPLGauss;
    private javax.swing.JButton SPLGaussCalculate;
    private javax.swing.JTextField SPLGaussFilepath;
    private javax.swing.JTextPane SPLGaussInput;
    private javax.swing.JLabel SPLGaussInst1;
    private javax.swing.JLabel SPLGaussInst10;
    private javax.swing.JLabel SPLGaussInst11;
    private javax.swing.JLabel SPLGaussInst12;
    private javax.swing.JLabel SPLGaussInst13;
    private javax.swing.JLabel SPLGaussInst14;
    private javax.swing.JLabel SPLGaussInst15;
    private javax.swing.JLabel SPLGaussInst16;
    private javax.swing.JLabel SPLGaussInst17;
    private javax.swing.JLabel SPLGaussInst18;
    private javax.swing.JLabel SPLGaussInst19;
    private javax.swing.JLabel SPLGaussInst2;
    private javax.swing.JLabel SPLGaussInst20;
    private javax.swing.JLabel SPLGaussInst21;
    private javax.swing.JLabel SPLGaussInst22;
    private javax.swing.JLabel SPLGaussInst23;
    private javax.swing.JLabel SPLGaussInst24;
    private javax.swing.JLabel SPLGaussInst25;
    private javax.swing.JLabel SPLGaussInst26;
    private javax.swing.JLabel SPLGaussInst27;
    private javax.swing.JLabel SPLGaussInst28;
    private javax.swing.JLabel SPLGaussInst29;
    private javax.swing.JLabel SPLGaussInst3;
    private javax.swing.JLabel SPLGaussInst30;
    private javax.swing.JLabel SPLGaussInst31;
    private javax.swing.JLabel SPLGaussInst32;
    private javax.swing.JLabel SPLGaussInst33;
    private javax.swing.JLabel SPLGaussInst34;
    private javax.swing.JLabel SPLGaussInst35;
    private javax.swing.JLabel SPLGaussInst36;
    private javax.swing.JLabel SPLGaussInst37;
    private javax.swing.JLabel SPLGaussInst38;
    private javax.swing.JLabel SPLGaussInst39;
    private javax.swing.JLabel SPLGaussInst4;
    private javax.swing.JLabel SPLGaussInst41;
    private javax.swing.JLabel SPLGaussInst42;
    private javax.swing.JLabel SPLGaussInst43;
    private javax.swing.JLabel SPLGaussInst44;
    private javax.swing.JLabel SPLGaussInst45;
    private javax.swing.JLabel SPLGaussInst46;
    private javax.swing.JLabel SPLGaussInst47;
    private javax.swing.JLabel SPLGaussInst48;
    private javax.swing.JLabel SPLGaussInst49;
    private javax.swing.JLabel SPLGaussInst5;
    private javax.swing.JLabel SPLGaussInst50;
    private javax.swing.JLabel SPLGaussInst51;
    private javax.swing.JLabel SPLGaussInst52;
    private javax.swing.JLabel SPLGaussInst53;
    private javax.swing.JLabel SPLGaussInst7;
    private javax.swing.JLabel SPLGaussInst8;
    private javax.swing.JLabel SPLGaussInst9;
    private javax.swing.JTextPane SPLGaussIntermediate;
    private javax.swing.JRadioButton SPLGaussJordan;
    private javax.swing.JButton SPLGaussJordanCalculate;
    private javax.swing.JTextField SPLGaussJordanFilepath;
    private javax.swing.JTextPane SPLGaussJordanInput;
    private javax.swing.JTextPane SPLGaussJordanIntermediate;
    private javax.swing.JButton SPLGaussJordanOpenFile;
    private javax.swing.JTextPane SPLGaussJordanOutput;
    private javax.swing.JPanel SPLGaussJordanPanel;
    private javax.swing.JLabel SPLGaussJordanPrompt;
    private javax.swing.JButton SPLGaussJordanSave;
    private javax.swing.JButton SPLGaussOpenFile;
    private javax.swing.JTextPane SPLGaussOutput;
    private javax.swing.JPanel SPLGaussPanel;
    private javax.swing.JLabel SPLGaussPrompt;
    private javax.swing.JButton SPLGaussSave;
    private javax.swing.JLabel SPLGaussTitle;
    private javax.swing.JLabel SPLGaussTitle1;
    private javax.swing.JLabel SPLGaussTitle2;
    private javax.swing.JLabel SPLGaussTitle3;
    private javax.swing.JLabel SPLGaussTitle4;
    private javax.swing.JLabel SPLGaussTitle5;
    private javax.swing.JLabel SPLGaussTitle6;
    private javax.swing.JLabel SPLGaussTitle7;
    private javax.swing.JLabel SPLGaussTitle8;
    private javax.swing.JLabel SPLLabel;
    private javax.swing.JRadioButton SPLMatriksBalikan;
    private javax.swing.JButton SPLMatriksBalikanCalculate;
    private javax.swing.JTextField SPLMatriksBalikanFilepath;
    private javax.swing.JTextPane SPLMatriksBalikanInput;
    private javax.swing.JTextPane SPLMatriksBalikanIntermediate;
    private javax.swing.JButton SPLMatriksBalikanOpenFile;
    private javax.swing.JTextPane SPLMatriksBalikanOutput;
    private javax.swing.JPanel SPLMatriksBalikanPanel;
    private javax.swing.JLabel SPLMatriksBalikanPrompt;
    private javax.swing.JButton SPLMatriksBalikanSave;
    private javax.swing.JPanel SideHeader;
    private javax.swing.JPanel SideMenu;
    private javax.swing.JPanel SidePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables
}
